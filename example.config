[Default]

### Quicksave to existing checkpoint file in save_dir after this many training steps
quicksave_every = 1000

### Create new checkpoint file in save_dir after this many training steps
checkpoint_every = 10000 

### Save model to checkpoint_name in save_dir after this many training steps, before exiting
train_steps = 100000 

### Number of image/text pairs to evaluate at a time in memory 
### (nb: this number impacts vRAM usage)
micro_batch_size = 4 

### Number of image/text pairs to evaluate for one interation 
### (nb: this number impacts the number of iterations per second [it/s])
batch_size = 32 

### Size of image to train in Unet2. 
### Unet1 is hard coded to '64', but may be changed in imagen-pytorch.py
### (nb: this number impacts vRAM usage)
training_image_size = 256

### Checkpoint name used to storing training and for sampling
checkpoint_name = example_latest.pth 

### Conditional training requires a csv file with text tags
### If you need to change training types, please generate a new config file 
conditional = True 

[FilePaths]

### Directory where checkpoints are to be saved
save_dir = example_checkpoints

### Directory for training images
input_folder = example_images

### Directory to save samples
output_folder = example_samples

### CSV file with images and labels.  
### This value is not present in unconditional training
### Image filenames are used as the key lookup into the csv file.
### The csv file should be formatted as 'filename,label1,label2,...' with as many labels as desired.
csv_path = example.csv

### Unet settings
### Research into these hyperparameters is still ongoing
### NB: changing these parameters will probably invalidate your existing model
### num_resnet_blocks may be altered in order to work with the vRAM on the current system
### Testing: Try increasing 'dim' to attempt improving resolution
### Testing: use_linear_attn may have some effect on coloration
### Please report findings to the issues page

[Unet1]
dim = 32
cond_dim = 512
dim_mults = 1, 2, 4, 8
num_resnet_blocks = 3
use_linear_attn = False
layer_attns = False, True, True, True
layer_cross_attns = False, True, True, True

[Unet2]
dim = 32
cond_dim = 512
dim_mults = 1, 2, 4, 8
num_resnet_blocks = 2, 4, 8, 8
use_linear_attn = False
layer_attns = False, False, False, True
layer_cross_attns = False, False, False, True

